// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NudgeApp.Data;

namespace NudgeApp.Data.Migrations
{
    [DbContext(typeof(NudgeDbContext))]
    [Migration("20190228193855_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NudgeApp.Data.Entities.AnonymousNudgeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActualTransportationType");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Modified");

                    b.Property<int>("PrecipitationProbability");

                    b.Property<int>("Result");

                    b.Property<int>("RoadCondition");

                    b.Property<int>("SkyCoverage");

                    b.Property<float>("Temperature");

                    b.Property<int>("UserPreferedTransportationType");

                    b.Property<float>("Wind");

                    b.HasKey("Id");

                    b.ToTable("AnonymousNudgeEntity");
                });

            modelBuilder.Entity("NudgeApp.Data.Entities.EnvironmentalInfoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CloudCoveragePercent");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Modified");

                    b.Property<int>("RoadCondition");

                    b.Property<int>("Temperature");

                    b.Property<DateTime>("Time");

                    b.Property<int>("Wind");

                    b.HasKey("Id");

                    b.ToTable("EnvironmentalInfoEntity");
                });

            modelBuilder.Entity("NudgeApp.Data.Entities.NudgeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("EnvironmentalInfoId");

                    b.Property<DateTime>("Modified");

                    b.Property<int>("NudgeResult");

                    b.Property<int>("TransportationType");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentalInfoId");

                    b.HasIndex("UserId");

                    b.ToTable("NudgeEntity");
                });

            modelBuilder.Entity("NudgeApp.Data.Entities.PreferencesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActualTransportationType");

                    b.Property<int>("AimedTransportationType");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Modified");

                    b.Property<int>("PreferedTransportationType");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PreferencesEntity");
                });

            modelBuilder.Entity("NudgeApp.Data.Entities.PushNotificationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Auth");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Endpoint");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("P256DH");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("PushNotificationEntity");
                });

            modelBuilder.Entity("NudgeApp.Data.Entities.TripEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<int>("DistanceTraveled");

                    b.Property<Guid>("EnvironmentalInfoId");

                    b.Property<DateTime>("Modified");

                    b.Property<int>("UsedTransportationType");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentalInfoId");

                    b.HasIndex("UserId");

                    b.ToTable("TripEntity");
                });

            modelBuilder.Entity("NudgeApp.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Name");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("UserEntity");
                });

            modelBuilder.Entity("NudgeApp.Data.Entities.NudgeEntity", b =>
                {
                    b.HasOne("NudgeApp.Data.Entities.EnvironmentalInfoEntity", "EnvironmentalInfo")
                        .WithMany()
                        .HasForeignKey("EnvironmentalInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NudgeApp.Data.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NudgeApp.Data.Entities.PreferencesEntity", b =>
                {
                    b.HasOne("NudgeApp.Data.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NudgeApp.Data.Entities.TripEntity", b =>
                {
                    b.HasOne("NudgeApp.Data.Entities.EnvironmentalInfoEntity", "EnvironmentalInfo")
                        .WithMany()
                        .HasForeignKey("EnvironmentalInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NudgeApp.Data.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
